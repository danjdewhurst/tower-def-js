import { CellType } from "../types/Game";
import type { LevelConfig } from "../types/Level";

const createGrid = (): CellType[][] => {
  const grid: CellType[][] = Array(50)
    .fill(null)
    .map(() => Array(50).fill(CellType.TOWER_SLOT));

  // Create a spiral path from outside to center
  const pathCoords = [
    // Top edge (left to right)
    [5, 5],
    [6, 5],
    [7, 5],
    [8, 5],
    [9, 5],
    [10, 5],
    [11, 5],
    [12, 5],
    [13, 5],
    [14, 5],
    [15, 5],
    [16, 5],
    [17, 5],
    [18, 5],
    [19, 5],
    [20, 5],
    [21, 5],
    [22, 5],
    [23, 5],
    [24, 5],
    [25, 5],
    [26, 5],
    [27, 5],
    [28, 5],
    [29, 5],
    [30, 5],
    [31, 5],
    [32, 5],
    [33, 5],
    [34, 5],
    [35, 5],
    [36, 5],
    [37, 5],
    [38, 5],
    [39, 5],
    [40, 5],
    [41, 5],
    [42, 5],
    [43, 5],
    [44, 5],
    // Right edge (top to bottom)
    [44, 6],
    [44, 7],
    [44, 8],
    [44, 9],
    [44, 10],
    [44, 11],
    [44, 12],
    [44, 13],
    [44, 14],
    [44, 15],
    [44, 16],
    [44, 17],
    [44, 18],
    [44, 19],
    [44, 20],
    [44, 21],
    [44, 22],
    [44, 23],
    [44, 24],
    [44, 25],
    [44, 26],
    [44, 27],
    [44, 28],
    [44, 29],
    [44, 30],
    [44, 31],
    [44, 32],
    [44, 33],
    [44, 34],
    [44, 35],
    [44, 36],
    [44, 37],
    [44, 38],
    [44, 39],
    [44, 40],
    [44, 41],
    [44, 42],
    [44, 43],
    [44, 44],
    // Bottom edge (right to left)
    [43, 44],
    [42, 44],
    [41, 44],
    [40, 44],
    [39, 44],
    [38, 44],
    [37, 44],
    [36, 44],
    [35, 44],
    [34, 44],
    [33, 44],
    [32, 44],
    [31, 44],
    [30, 44],
    [29, 44],
    [28, 44],
    [27, 44],
    [26, 44],
    [25, 44],
    [24, 44],
    [23, 44],
    [22, 44],
    [21, 44],
    [20, 44],
    [19, 44],
    [18, 44],
    [17, 44],
    [16, 44],
    [15, 44],
    [14, 44],
    [13, 44],
    [12, 44],
    [11, 44],
    [10, 44],
    [9, 44],
    [8, 44],
    [7, 44],
    [6, 44],
    // Left edge (bottom to top)
    [6, 43],
    [6, 42],
    [6, 41],
    [6, 40],
    [6, 39],
    [6, 38],
    [6, 37],
    [6, 36],
    [6, 35],
    [6, 34],
    [6, 33],
    [6, 32],
    [6, 31],
    [6, 30],
    [6, 29],
    [6, 28],
    [6, 27],
    [6, 26],
    [6, 25],
    [6, 24],
    [6, 23],
    [6, 22],
    [6, 21],
    [6, 20],
    [6, 19],
    [6, 18],
    [6, 17],
    [6, 16],
    [6, 15],
    [6, 14],
    [6, 13],
    [6, 12],
    [6, 11],
    [6, 10],
    [6, 9],
    [6, 8],
    [6, 7],
    [6, 6],
    // Inner path to center
    [7, 6],
    [8, 6],
    [9, 6],
    [10, 6],
    [11, 6],
    [12, 6],
    [13, 6],
    [14, 6],
    [15, 6],
    [16, 6],
    [17, 6],
    [18, 6],
    [19, 6],
    [20, 6],
    [21, 6],
    [22, 6],
    [23, 6],
    [24, 6],
    [25, 6],
  ];

  // Set path cells
  for (const coord of pathCoords) {
    const [x, y] = coord;
    if (x !== undefined && y !== undefined && x >= 0 && x < 50 && y >= 0 && y < 50) {
      const row = grid[y];
      if (row) {
        row[x] = CellType.PATH;
      }
    }
  }

  // Set spawn and goal
  const spawnRow = grid[5];
  const goalRow = grid[6];
  if (spawnRow) spawnRow[0] = CellType.SPAWN;
  if (goalRow) goalRow[25] = CellType.GOAL;

  return grid;
};

export const level3: LevelConfig = {
  id: "level3",
  name: "Spiral Fortress",
  description: "Defend the spiral approach",
  difficulty: 3,
  grid: createGrid(),
  spawn: { x: 0, y: 5 },
  goal: { x: 25, y: 6 },
  waves: [
    {
      id: 1,
      enemies: [{ count: 10, interval: 700, enemyType: "basic" }],
      delay: 1000,
    },
    {
      id: 2,
      enemies: [{ count: 15, interval: 500, enemyType: "basic" }],
      delay: 2000,
    },
    {
      id: 3,
      enemies: [{ count: 20, interval: 400, enemyType: "basic" }],
      delay: 2000,
    },
    {
      id: 4,
      enemies: [{ count: 25, interval: 300, enemyType: "basic" }],
      delay: 3000,
    },
    {
      id: 5,
      enemies: [{ count: 30, interval: 250, enemyType: "basic" }],
      delay: 3000,
    },
  ],
  startingMoney: 150,
};
